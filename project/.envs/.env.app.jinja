# /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\
# /!\                                                                                         /!\
# /!\   SECURITY: DO *NOT* COMMIT IN GIT *NOR* SHARE THIS FILE!                               /!\
# /!\                                                                                         /!\
# /!\   Store any sensitive/secret information here (passwords, API keysâ€¦).                   /!\
# /!\                                                                                         /!\
# /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\

# Project: [[ PROJECT_SLUG ]]
# Service: app
# App Mode: local


# REQUIRED: Host/domain name, protocol, and port of the site.
# Format: `https://example.com`, `https://example.test:8000`
# Parsed into: `SITE_PROTOCOL`, `SITE_DOMAIN`, `SITE_PORT`.
# Note: Using `[[ PROJECT_SLUG ]].test` instead of `localhost` or `127.0.0.1`
#   can be useful (e.g. for cookies and password managers).
SITE_URL=http://[[ PROJECT_SLUG ]].test:8000

# Optional: Main domain for emails.
# Format: `example.com`, `example.test`
# Default: `$SITE_DOMAIN`
# // EMAIL_DOMAIN=[[ PROJECT_SLUG ]].test

# Optional: Host/domain names that this Django site can serve.
# Note: Define multiple values separated by a comma.
# Format: `example.com,localhost`, `.example.test`
# Default: `[$SITE_DOMAIN]`
# // ALLOWED_HOSTS="[[ PROJECT_SLUG ]].test"

# REQUIRED: Base URL for the admin.
# Format: `.*/` (without leading and with trailing slash)
# /!\ SECURITY: Avoid the default "admin/".
ADMIN_BASE_URL="[[ ADMIN_BASE_URL|trim('/') ]]/"

# Optional: Base URL for sitemaps.
# Format: `.*/` (without leading and with trailing slash)
# /!\ SECURITY: Avoid the default "/sitemap.xml" (to prevent malicious use of the page list).
SITEMAPS_BASE_URL="[[ SITEMAPS_BASE_URL|trim('/')|default(make_secret()[0:20]) ]]/"

# REQUIRED: Secret key for a particular Django installation.
# This is used to provide cryptographic signing, and must be set to a unique, unpredictable value.
# /!\ SECURITY: Running Django with a known `SECRET_KEY` defeats many of Django's security
# /!\   protections, and can lead to privilege escalation and remote code execution vulnerabilities.
# Warning: If you rotate your secret key, sessions, messages, reset password tokens, and all
#   cryptographic signing will be invalidated. Secret keys are not used for passwords of users and
#   key rotation will not affect them.
# Allowed characters: `a-zA-Z0-9!@#$%^&*(-_=+)`.
# To generated a random value, see:
#   https://github.com/django/django/blob/3.1.5/django/core/management/utils.py#L77
SECRET_KEY="[[ make_secret()[0:50] ]]"

# Optional: Config for email sending (SMTP).
# Format: `smtp+tls://username:password@smtp.example.com:587` or `consolemail://`
# Default: `None`
# The password can be generated via: `console generate:url-password | pbcopy`
SMTP_URL=consolemail://

# Optional: Define whether to activate debugging.
# Value: `true|false`
# Default: `$APP_MODE in ["local", "development"]`
# // DJANGO_DEBUG=false

# Optional: IP addresses allowed to view debugging information.
# Note: Define multiple values separated by a comma.
# Format: `127.0.0.1,10.0.12.34`
# Default: `["127.0.0.1"]`
# // DJANGO_INTERNAL_IPS="127.0.0.1"
